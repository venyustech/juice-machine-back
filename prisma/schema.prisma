generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum JuiceType {
  SHARK
  NATURAL
  FUNCTIONAL
  THAI
  SMOOTHIE
  GENERIC
}

enum OrderStatus {
  RECEIVED
  IN_PREPARATION
  DISPATCHED
  DELIVERED
}

model Option {
  id           Int           @id @default(autoincrement())
  name         String
  juiceOptions JuiceOption[]
  orderOptions OrderOption[]

  @@map("option")
}

model Extra {
  id         Int          @id @default(autoincrement())
  name       String
  value      Int
  juices     JuiceExtra[]
  OrderExtra OrderExtra[]

  @@map("extra")
}

model Juice {
  id          Int               @id @default(autoincrement())
  name        String
  value       Int
  description String
  imageUrl    String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  juiceType   JuiceType
  options     JuiceOption[]
  extras      JuiceExtra[]
  ingredient  JuiceIngredient[] // Relacionamento correto com JuiceIngredient
  orders      Order[]
}

model JuiceIngredient {
  id           Int        @id @default(autoincrement())
  juice        Juice      @relation(fields: [juiceId], references: [id])
  juiceId      Int
  ingredients  Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId Int
}

model Ingredient {
  id     Int               @id @default(autoincrement())
  name   String
  juices JuiceIngredient[]
}

model JuiceOption {
  id       Int    @id @default(autoincrement())
  juice    Juice  @relation(fields: [juiceId], references: [id])
  juiceId  Int
  option   Option @relation(fields: [optionId], references: [id])
  optionId Int

  @@map("juice-option")
}

model JuiceExtra {
  id      Int   @id @default(autoincrement())
  juice   Juice @relation(fields: [juiceId], references: [id])
  juiceId Int
  extra   Extra @relation(fields: [extraId], references: [id])
  extraId Int

  @@map("juice-extra")
}

model Machine {
  id        Int      @id @default(autoincrement())
  name      String
  local     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]

  @@map("machine")
}

model Order {
  id           Int           @id @default(autoincrement())
  juice        Juice         @relation(fields: [juiceId], references: [id])
  juiceId      Int
  machine      Machine       @relation(fields: [machineId], references: [id])
  machineId    Int
  userDocument String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  options      OrderOption[]
  extras       OrderExtra[]
  status       OrderStatus

  @@map("order")
}

model OrderOption {
  id       Int    @id @default(autoincrement())
  order    Order  @relation(fields: [orderId], references: [id])
  orderId  Int
  option   Option @relation(fields: [optionId], references: [id])
  optionId Int

  @@map("order-option")
}

model OrderExtra {
  id      Int   @id @default(autoincrement())
  order   Order @relation(fields: [orderId], references: [id])
  orderId Int
  extra   Extra @relation(fields: [extraId], references: [id])
  extraId Int

  @@map("order-extra")
}
